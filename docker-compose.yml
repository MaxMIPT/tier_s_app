services:
  postgres:
    image: postgres:15
    container_name: postgres
    environment:
      POSTGRES_DB: dbname
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data_app:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d dbname"]
      interval: 5s
      timeout: 5s
      retries: 5

  temporal:
    image: temporalio/auto-setup:1.27.2
    container_name: temporal
    ports:
      - "7233:7233"
    environment:
      DB: postgres12
      DB_PORT: 5432
      POSTGRES_USER: user
      POSTGRES_PWD: password
      POSTGRES_SEEDS: postgres
      DYNAMIC_CONFIG_FILE_PATH: config/dynamicconfig/development-sql.yaml
      ENABLE_ES: false
      TEMPORAL_ADDRESS: temporal:7233
      TEMPORAL_CLI_ADDRESS: temporal:7233
      LOG_LEVEL: error
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./worker/dynamicconfig:/etc/temporal/config/dynamicconfig
    healthcheck:
      test: [ "CMD", "tctl", "--namespace", "default", "workflow", "list" ]
      interval: 10s
      timeout: 5s
      retries: 5

  minio:
    image: quay.io/minio/minio
    container_name: minio
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    ports:
      - "9000:9000"
      - "9001:9001"
    command: ["server", "/data", "--console-address", ":9001"]
    volumes:
      - minio_data:/data

  temporal-admin-tools:
    container_name: temporal-admin-tools
    depends_on:
      - temporal
    environment:
      - TEMPORAL_ADDRESS=temporal:7233
      - TEMPORAL_CLI_ADDRESS=temporal:7233
      - LOG_LEVEL=error
    image: temporalio/admin-tools:1.27.2-tctl-1.18.2-cli-1.3.0
    stdin_open: true
    tty: true

  temporal-ui:
    depends_on:
      - temporal
    environment:
      - TEMPORAL_ADDRESS=temporal:7233
      - TEMPORAL_CORS_ORIGINS=http://localhost:3000
      - LOG_LEVEL=error
    image: temporalio/ui:2.34.0
    ports:
      - 8080:8080

  convertion:
    container_name: convertion
    build:
      context: ./audio_converter_service

  api:
    container_name: api
    build:
      context: ./api
    ports:
      - "8000:8000"
    environment:
      DATABASE_URL: postgresql+asyncpg://user:password@postgres:5432/dbname
      TEMPORAL_SERVICE: temporal:7233
      # DB
      POSTGRES_DB: dbname
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      # Minio
      MINIO_ENDPOINT_URL: http://minio:9000
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
      MINIO_BUCKET: uploads

    depends_on:
      minio:
        condition: service_started
      postgres:
        condition: service_healthy
      temporal:
        condition: service_started

  worker:
    build:
      context: ./worker
    environment:
      DATABASE_URL: postgresql+asyncpg://user:password@postgres:5432/dbname
      TEMPORAL_SERVICE: temporal:7233
      # Minio
      MINIO_ENDPOINT_URL: minio:9000
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
      MINIO_BUCKET: uploads
    depends_on:
      postgres:
        condition: service_healthy
      temporal:
        condition: service_healthy
      minio:
        condition: service_started

volumes:
  postgres_data_app:
  minio_data:
